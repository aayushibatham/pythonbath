import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix

# Task 1: Data Preparation
X = np.array([[1], [2], [3], [4], [5]])
y = np.array([0, 0, 0, 1, 1])  # 0 = Low Area, 1 = High Area

# Visualize the Data
plt.scatter(X, y, color='green')
plt.xlabel("Area")
plt.ylabel("High Area (1) / Low Area (0)")
plt.title("Original Data")
plt.show()

# Task 2: Train the Logistic Regression Model
model = LogisticRegression()
model.fit(X, y)

# Display model parameters
print("Model Coefficient (slope):", model.coef_[0][0])
print("Model Intercept:", model.intercept_[0])

# Task 3: Predict and Evaluate
y_pred = model.predict(X)
print("Predictions:", y_pred)

accuracy = accuracy_score(y, y_pred)
cm = confusion_matrix(y, y_pred)

print("Accuracy:", accuracy)
print("Confusion Matrix:\n", cm)

# Task 4: Visualize the Logistic Curve
X_test = np.linspace(0, 6, 100).reshape(-1, 1)  # smooth curve
y_proba = model.predict_proba(X_test)[:, 1]     # probability of class 1

plt.scatter(X, y, color='green', label='Data')
plt.plot(X_test, y_proba, color='blue', label='Logistic Curve')
plt.xlabel("Area")
plt.ylabel("Probability of High Area")
plt.title("Logistic Regression Curve")
plt.legend()
plt.show()
